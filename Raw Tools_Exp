title: "Raw Tools quality control output analysis 
### Data analysis and plotting

#These are the R libraries we will require.

library(ggplot2)
library(dplyr)
library(cowplot)
library(RColorBrewer)
library(reshape2)
library(viridis)

#First we need to get the QC output file generated by RawTools.

###################################################################################################################################################################
#get the qc file
qc_data = read.table('QcDataTable.csv', header = TRUE, sep = ',')
injection = c(1,2,3,4,5,6,7,8,9)
qc_data$injection = injection

#We can start plotting immediately here, looking at scan numbers first.

###################################################################################################################################################################
#plot the scan numbers across replicates
qc_melt = melt(qc_data, id.var=c('injection'), measure.vars = c('TotalScans','NumMs1Scans','NumMs2Scans'))
output_plot = ggplot(qc_melt, aes(as.numeric(injection), value, fill = variable, group = variable)) +
  geom_point(pch = 21, size = 2, color = 'black', alpha = 0.6) +
  #geom_smooth(method = 'loess', se = FALSE, lty = 3) +
  scale_fill_manual(values = brewer.pal(4, "Set3")[c(1,3,4)]) +
  labs(x = "Injection Number", y = 'Number of Scans', title = 'Scan Numbers') +
  theme(axis.text.x = element_text(size = 9), legend.position="none") +
  #scale_y_continuous(limits = c(0,5000), breaks = seq(0,5000,1000)) +
  scale_x_continuous(limits = c(0,9), breaks = seq(0,9,2))
output_plot
save_plot('QC_scan-number-across-replicates.pdf',output_plot)

#MS1 intensities.

###################################################################################################################################################################
#plot the MS1 intensities across replicates
output_plot = ggplot(qc_data, aes(as.numeric(injection), log10(Ms1MedianSummedIntensity))) +
  geom_point(fill = brewer.pal(3,'Set3')[1], pch = 21, size = 2, colour = 'black', alpha = 0.6) +
  labs(x = "Injection Number", y = 'log10(Median Summed MS1 Intensity)', title = 'MS1 Intensity') +
  theme(axis.text.x = element_text(size = 9), legend.position="none") +
  scale_y_continuous(limits = c(0,15), breaks = seq(0,15,1)) +
  scale_x_continuous(limits = c(0,9), breaks = seq(0,9,1))
output_plot
save_plot('QC_MS1-intensity-across-replicates.pdf',output_plot)

#MS2 intensities.

###################################################################################################################################################################
#plot the MS2 intensities across replicates
output_plot = ggplot(qc_data, aes(as.numeric(injection), log10(Ms2MedianSummedIntensity))) +
  geom_point(fill = brewer.pal(3,'Set3')[1], pch = 21, size = 2, colour = 'black', alpha = 0.6) +
  labs(x = "Injection Number", y = 'log10(Median Summed MS2 Intensity)', title = 'MS1 Intensity') +
  theme(axis.text.x = element_text(size = 9), legend.position="none") +
  scale_y_continuous(limits = c(0,15), breaks = seq(0,15,1)) +
  scale_x_continuous(limits = c(0,9), breaks = seq(0,9,1))
output_plot
save_plot('QC_MS2-intensity-across-replicates.pdf',output_plot)

#MS2 ion injection times.

###################################################################################################################################################################
#plot the MS2 injection times across replicates
output_plot = ggplot(qc_data, aes(as.numeric(injection), MedianMs2FillTime.ms.)) +
  geom_point(fill = brewer.pal(3,'Set3')[1], pch = 21, size = 2, colour = 'black', alpha = 0.6) +
  labs(x = "Injection Number", y = 'Median MS2 Ion Injection Time', title = 'MS2 Ion Injection Time') +
  theme(axis.text.x = element_text(size = 9), legend.position="none") +
  scale_y_continuous(limits = c(0,150), breaks = seq(0,150,30)) +
  scale_x_continuous(limits = c(0,9), breaks = seq(0,9,1))
output_plot
save_plot('QC_MS2-injection-across-replicates.pdf',output_plot)

#MS1 intensity as a chromatogram for fraction 23.

###################################################################################################################################################################
#plot a line plot of MS1 intensities
qc_Rep1 = read.table('ZE_6-PTU_Rep1_001.raw_Matrix.txt', header = TRUE, sep= '\t')
output_plot = ggplot(qc_Rep1, aes(MS1RetTime.min., Ms1MedianIntensity)) +
  geom_line(color = brewer.pal(3,'Set3')[1]) +
  labs(x = "Retention Time (minutes)", y = 'Median MS1 Intensity', title = 'MS1 Intensity Profile') +
  theme(axis.text.x = element_text(size = 9)) +
  #scale_x_continuous(limits = c(0,150), breaks = seq(0,150,25)) +
  scale_y_continuous(limits = c(0,3e6), breaks = seq(0,3e6,5e5))
output_plot
save_plot('QC_fraction23_ms1-intensity.pdf',output_plot)

#Use the `--chro` output of RawTools instead for the chromatogram plot.

###################################################################################################################################################################
#plot a line plot of MS1 intensities using the chromatogram output of RawTools
qc_Rep001 = read.table('ZE_6-PTU_Rep1_001.raw_Ms_BP_chromatogram.txt', header = TRUE, sep= '\t')
output_plot = ggplot(qc_Rep001, aes(RetentionTime, Intensity)) +
  geom_line(color = brewer.pal(3,'Set3')[1]) +
  labs(x = "Retention Time (minutes)", y = 'MS1 Intensity', title = 'MS1 Intensity Profile') +
  theme(axis.text.x = element_text(size = 9)) +
  #scale_x_continuous(limits = c(0,150), breaks = seq(0,150,25)) +
  scale_y_continuous(limits = c(0,6e9), breaks = seq(0,6e9,6e8))
output_plot
save_plot('QC_fraction23_ms1-intensity.pdf',output_plot)

###################################################################################################################################################################
#plot the esi stability across replicates
output_plot = ggplot(qc_data, aes(as.numeric(injection), NumEsiInstabilityFlags)) +
  geom_point(fill = brewer.pal(3,'Set3')[1], pch = 21, size = 2, colour = 'black', alpha = 0.6) +
  labs(x = "Injection Number", y = 'Number of MS1 Instability Counts', title = 'Electrospray Stability') +
  theme(axis.text.x = element_text(size = 9), legend.position="none") +
  scale_y_continuous(limits = c(0,20), breaks = seq(0,20,2)) +
  scale_x_continuous(limits = c(0,9), breaks = seq(0,9,2))
output_plot
save_plot('QC_esi-stability-across-replicates.pdf',output_plot)

#Lastly, the error in the mass analyzer based on the IdentiPy results.

###################################################################################################################################################################
#plot the mass drift across replicates
output_plot = ggplot(qc_data, aes(as.numeric(injection), abs(MedianMassDrift.ppm.))) +
  geom_point(fill = brewer.pal(3,'Set3')[1], pch = 21, size = 2, colour = 'black', alpha = 0.6) +
  labs(x = "Injection Number", y = 'Median Mass Error (ppm)', title = 'Mass Analyzer Accuracy') +
  theme(axis.text.x = element_text(size = 9), legend.position="none") +
  #scale_y_continuous(limits = c(0,6), breaks = seq(0,6,1)) +
  scale_x_continuous(limits = c(0,9), breaks = seq(0,9,2))
output_plot
save_plot('QC_mass-drift-across-replicates.pdf',output_plot)

#Done.
